# TODO: Add Model Path for inference
# TODO: Add all the params here
# TODO:   # std::string mapFrame_ = "crl_rzr/map";
          # std::string egoFrame_ = "crl_rzr/sensor_origin_link";
          # int infFreq_ = 10;
          # int pclMinPts_ = 1000;
          # int voxelMapMinPts_ = 1000;
          # int resizeWidth_ = 640;
          # int resizeHeight_ = 396;

          # int mapWidthMicro_ = 500;  // gridmap width and height
          # float resMicro_ = 0.2;     // Resolution of micro range map
          # // float lengthMicro_ = 100; // Resolution * Width

          # int mapWidthShort_ = 400;  // gridmap width and height
          # float resShort_ = 0.5;     // Resolution of short range map

velocity_short: &velocity_short 10
lethal_threshold_short: &lethal_threshold_short 0.8
lethal_cost: &lethal_cost 2000
lethal_threshold_micro: &lethal_threshold_micro 0.7

micro_threshold: 0.7 #(TODO: Filter chain for micro)

grid_map_filters_short:
  - name: surface_normals
    type: gridMapFilters/NormalVectorsFilter
    params:
      input_layer: elevation
      output_layers_prefix: normal_
      radius: 1.5
      normal_vector_positive_axis: z
      algorithm: raster
      parallelization_enabled: true

  - name: duplicate_cost
    type: gridMapFilters/MathExpressionFilter
    params:
      output_layer: velocity
      expression: cost

  - name: add_velocity
    type: gridMapFilters/ThresholdFilter
    params:
      condition_layer: velocity
      output_layer: velocity
      lower_threshold: 2.0
      set_to: *velocity_short

  - name: cost_lethal_threshold
    type: gridMapFilters/ThresholdFilter
    params:
      condition_layer: cost
      output_layer: cost
      upper_threshold: *lethal_threshold_short
      set_to: *lethal_cost
  
grid_map_filters_micro:
  - name: get_velocity_from_risk
    type: gridMapFilters/MathExpressionFilter
    params:
      output_layer: max_velocity_instantaneous
      expression: 10 * cwiseMax(0.7 - wheel_risk_bev, 0.0)
  
  - name: surface_normals_micro
    type: gridMapFilters/NormalVectorsFilter
    params:
      input_layer: elevation
      output_layers_prefix: normal_
      radius: 1.0
      normal_vector_positive_axis: z
      algorithm: raster
      parallelization_enabled: true
  
  - name: lethal_threshold
    type: gridMapFilters/ThresholdFilter
    params:
      condition_layer: wheel_risk_bev
      output_layer: wheel_lethal
      upper_threshold: *lethal_threshold_micro
      set_to: 1
  
  - name: lethal_threshold
    type: gridMapFilters/ThresholdFilter
    params:
      condition_layer: wheel_lethal
      output_layer: wheel_lethal
      lower_threshold: *lethal_threshold_micro
      set_to: 0

  - name: duplicate_body_lethal
    type: gridMapFilters/MathExpressionFilter
    params:
      output_layer: body_lethal_cspace
      expression: wheel_lethal
  
  - name: duplicate_wheel_risk
    type: gridMapFilters/MathExpressionFilter
    params:
      output_layer: wheel_risk
      expression: wheel_risk_bev
  
  - name: duplicate_body_risk
    type: gridMapFilters/MathExpressionFilter
    params:
      output_layer: body_risk_cspace
      expression: wheel_risk